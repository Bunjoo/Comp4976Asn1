@model IEnumerable<DiplomaDataModel.Choice>

@{
    ViewBag.Title = "Index";
}

<head>
    <br />

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <br/>
    <table>
        <tr>
            <td>@Html.Label("Type of Reports: ") @Html.DropDownList("ReportSelect", null, htmlAttributes: new { @class = "form-control" })</td>
            <td>@Html.Label("Year and Term: ") @Html.DropDownList("YearTermSelects", null, new { @class = "form-control" })</td>
        </tr>
    </table>
    <br/>
    <button onclick="showReports('#show_report'); return false;">Get Reports</button>
    <br /><br />

    <div id="piechart" style="width: 900px; height: 500px;"></div>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script>

        var baseUrl = 'http://a2api.amandaxu.xyz/api/choices';

        function showReports(target) {
            //if value is report
            if ($('#ReportSelect').val() == "details") {
                //get detailed report
                GetAllChoices(target);
            }

            if ($('#ReportSelect').val() == "chart") {
                //empty div
                $(target).empty();
                 
                //call chart function
                google.charts.load('current', { 'packages': ['corechart'] });
                google.charts.setOnLoadCallback(drawChart);
                function drawChart() {

                    var data = google.visualization.arrayToDataTable([
                      ['Task', 'Hours per Day'],
                      ['Data Communications', 11],
                      ['Client Server', 2],
                      ['Digital Processing', 2],
                      ['Information Systems', 2],
                      ['Tech Pro', 7]
                    ]);

                    var options = {
                        title: 'Fall 2016'
                    };

                    var chart = new google.visualization.PieChart(document.getElementById('piechart'));

                    chart.draw(data, options);
                }
            }
        }

        function GetAllChoices(target) {
            jQuery.support.cors = true;
            $.ajax({
                url: baseUrl,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    WriteResponse(data, target);
                },
                error: function (x, y, z) {
                    alert(x + '\n' + y + '\n' + z);
                }
            });
           }

        function WriteResponse(people, target) {
            var strResult = "<table class='table'><tr><th>Id</th><th>First Name</th><th>Last Name</th><th>Year Term</th><th>First Choice</th><th>Second Choice</th><<th>Third Choice</th>/<th>Fourth Choice</th>tr>";

            var currentyearterm = $('#YearTermSelects').find(":selected").text();

            $.each(people, function (index, person) {
                if (person.YearTermId == ($('#YearTermSelects').val())) {

                    var firstOption = person.FirstChoiceOptionId;
                    strResult += "<tr>\n";
                    strResult += "<td>" + ((person.StudentId !== undefined) ? person.StudentId : "") + "</td><td> " + person.StudentFirstName + "</td><td>" + person.StudentLastName + "</td><td>" + currentyearterm + "</td><td>" +  person.FirstChoiceOptionId + "</td>" + "</td><td>" + person.SecondChoiceOptionId + "</td>" + "</td><td>" + person.ThirdChoiceOptionId + "</td>" + "</td><td>" + person.FourthChoiceOptionId + "</td>";
                    strResult += "<td></td>\n"
                    strResult += "</tr>\n";
                }
            });
            strResult += "</table>\n";
            $(target).html(strResult);
        }
    </script>
</head>

<div id="show_report">

</div>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.StudentId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentFirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StudentLastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FK_YearTermId.Term)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SecondOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ThirdOption)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FourthOption)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.StudentId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentFirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StudentLastName)
        </td>
        <td>
            @if (item.FK_YearTermId.Term == 10) {
                @("Winter")
            }
            else if (item.FK_YearTermId.Term == 20){
                @("Spring/Summer")
            }
            else{
                @("fall")
            }


            @Html.DisplayFor(modelItem => item.FK_YearTermId.Year)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FourthOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SecondOption.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ThirdOption.Title)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ChoiceId }) |
            @Html.ActionLink("Details", "Details", new { id=item.ChoiceId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ChoiceId })
        </td>
    </tr>
}

</table>
